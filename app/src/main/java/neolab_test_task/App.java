/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package neolab_test_task;

import java.nio.file.Paths;
import java.util.concurrent.atomic.AtomicInteger;

import org.slf4j.LoggerFactory;

import neolab_test_task.entity_reader.EntityReader;
import neolab_test_task.rule.reader.RuleReader;

public class App {
    private App() {}

    public static void main(final String[] args) {
        final var logger = LoggerFactory.getLogger(App.class);
        try {
            final var entities = EntityReader.read(Paths.get(
                ClassLoader
                    .getSystemResource("entities_example.csv")
                    .toURI()
            ));
            final var rules = RuleReader.read(Paths.get(
                ClassLoader
                    .getSystemResource("rules_example.json")
                    .toURI()
            ));
            rules.forEach(rule -> {
                var counter = new AtomicInteger(0);
                var statements = rule.getStatements();
                entities.forEach(entity -> {
                    if (statements.stream().allMatch(statement ->
                        statement.getOperator().run(
                            entity.get(statement.getField()),
                            statement.getList()
                        )
                    )) {
                        counter.incrementAndGet();
                    }
                });
                logger.info("{} - {}", rule.getDesc(), counter.get());
            });
        } catch (Exception e) {
            logger.error(e.getMessage(), e.getCause());
        }
    }
}
